[package]
name        = "zeroize"
description = """
              Securely zero memory with using a simple trait built on stable
              Rust primitives which guarantee they will not be 'optimized away'
              by leveraging LLVM's volatile write semantics and memory fences.
              No weird tricks, no insecure fallbacks, no dependencies, no std,
              just a trait implemented for all of Rust's core scalar types
              and slices/iterators thereof for securely zeroing memory.
              """
version     = "0.4.2" # Also update html_root_url in lib.rs when bumping this
authors     = ["Tony Arcieri <tony@iqlusion.io>"]
license     = "Apache-2.0 OR MIT"
edition     = "2018"
homepage    = "https://github.com/iqlusioninc/crates/"
repository  = "https://github.com/iqlusioninc/crates/tree/master/zeroize"
readme      = "README.md"
categories  = ["cryptography", "memory-management", "no-std", "os"]
keywords    = ["memory", "memset", "secure", "volatile", "zero"]

[badges]
travis-ci = { repository = "iqlusioninc/crates" }

[features]
default = ["std"]
alloc = []
nightly = []
std = ["alloc"]
